/*
简单的矩阵快速幂
*/
#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;
int f[2][2],f1[2][2],f2[2][2];
int get(int n){
    int ans = 0;
    f1[0][0]=f1[1][1]=1;
    f1[0][1]=f1[1][0]=0;
    while(n){
        if(n%2){
        f2[0][0]=(f[0][0]*f1[0][0]%7+f[0][1]*f1[1][0]%7)%7;
        f2[0][1]=(f[0][0]*f1[0][1]%7+f[0][1]*f1[1][1]%7)%7;
        f2[1][0]=(f[1][0]*f1[0][0]%7+f[1][1]*f1[1][0]%7)%7;
        f2[1][1]=(f[1][0]*f1[0][1]%7+f[1][1]*f1[1][1]%7)%7;
            for(int i=0;i<2;i++)
                for(int j=0;j<2;j++)
                    f1[i][j]=f2[i][j];
        }
        f2[0][0]=(f[0][0]*f[0][0]%7+f[0][1]*f[1][0]%7)%7;
        f2[0][1]=(f[0][0]*f[0][1]%7+f[0][1]*f[1][1]%7)%7;
        f2[1][0]=(f[1][0]*f[0][0]%7+f[1][1]*f[1][0]%7)%7;
        f2[1][1]=(f[1][0]*f[0][1]%7+f[1][1]*f[1][1]%7)%7;
        for(int i=0;i<2;i++)
            for(int j=0;j<2;j++)
                f[i][j]=f2[i][j];
        n>>=1;
    }
    ans=(f1[1][0]+f1[1][1])%7;
    return ans;
}
int main(){
int a,b,n;
while(~scanf("%d%d%d",&a,&b,&n)&&(a+b+n)){
f[0][0]=0;
f[0][1]=1;
f[1][0]=b%7;
f[1][1]=a%7;
if(n<=2)puts("1");
else printf("%d\n",get(n-2));
}
return 0;
}
